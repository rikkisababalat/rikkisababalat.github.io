// app/kasus-tb/page.tsx
'use client';

import React, { useState, useEffect, useRef, useMemo } from 'react';
import Link from 'next/link';
import { caseData, type Option } from './placeholder';

// Komponen SVG bisa didefinisikan di sini atau diimpor dari file lain
const BackIcon = () => <svg xmlns="http://www.w3.org/2000/svg" className="h-5 w-5 mr-2" viewBox="0 0 20 20" fill="currentColor"><path fillRule="evenodd" d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z" clipRule="evenodd" /></svg>;
const HomeIcon = () => <svg xmlns="http://www.w3.org/2000/svg" className="h-4 w-4 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor" strokeWidth="2"><path strokeLinecap="round" strokeLinejoin="round" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6" /></svg>;
const NextIcon = () => <svg xmlns="http://www.w3.org/2000/svg" className="h-5 w-5 ml-2" viewBox="0 0 20 20" fill="currentColor"><path fillRule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clipRule="evenodd" /></svg>;
const InstagramIcon = () => <svg className="w-7 h-7" viewBox="0 0 32 32"><defs><radialGradient id="ig-gradient" gradientUnits="userSpaceOnUse" cx="8.982" cy="23.018" r="31.259"><stop offset="0" stopColor="#fdf497"/><stop offset="0.25" stopColor="#fd5949"/><stop offset="0.5" stopColor="#d6249f"/><stop offset="0.75" stopColor="#285AEB"/></radialGradient></defs><path d="M22.9,0H9.1C4.1,0,0,4.1,0,9.1v13.8C0,27.9,4.1,32,9.1,32h13.8c5,0,9.1-4.1,9.1-9.1V9.1C32,4.1,27.9,0,22.9,0z M16,21.8c-3.2,0-5.8-2.6-5.8-5.8s2.6-5.8,5.8-5.8s5.8,2.6,5.8,5.8S19.2,21.8,16,21.8z M23.9,9.4c-1.2,0-2.2-1-2.2-2.2s1-2.2,2.2-2.2s2.2,1,2.2,2.2S25.1,9.4,23.9,9.4z" fill="url(#ig-gradient)"/><path d="M16,11.3c-2.6,0-4.7,2.1-4.7,4.7s2.1,4.7,4.7,4.7s4.7-2.1,4.7-4.7S18.6,11.3,16,11.3z" fill="#fff"/><path d="M23.9,6.2c-0.6,0-1.1,0.5-1.1,1.1c0,0.6,0.5,1.1,1.1,1.1s1.1-0.5,1.1-1.1C25,6.7,24.5,6.2,23.9,6.2z" fill="#fff"/></svg>;
const YouTubeIcon = () => <svg className="w-8 h-8" viewBox="0 0 28 20"><path fill="#FF0000" d="M27.4,3.1c-0.4-1.4-1.5-2.5-2.9-2.9C22.6,0,14,0,14,0S5.4,0,3.5,0.3C2.1,0.6,1,1.7,0.6,3.1C0,5.4,0,10,0,10s0,4.6,0.6,6.9c0.4,1.4,1.5,2.5,2.9,2.9C5.4,20,14,20,14,20s8.6,0,10.5-0.3c1.4-0.4,2.5-1.5,2.9-2.9C28,14.6,28,10,28,10S28,5.4,27.4,3.1z"/><path fill="#FFFFFF" d="M11.2,14.3L18.4,10L11.2,5.7V14.3z"/></svg>;
const TikTokIcon = () => <svg className="w-7 h-7" viewBox="0 0 24 24"><defs><filter id="tiktok-shadow"><feDropShadow dx="2" dy="2" stdDeviation="0.5" floodColor="#69C9D0"/><feDropShadow dx="-2" dy="-2" stdDeviation="0.5" floodColor="#EE1D52"/></filter></defs><path fill="#25F4EE" d="M16.6,5.82s.06-.02.18-.04.4-.04.72-.04c.7,0,1.28.1,1.74.32.48.22.84.56,1.1,1,.24.44.36.96.36,1.56,0,.66-.14,1.24-.42,1.74-.28.5-.68.88-1.2,1.12a2.92,2.92,0,0,1-1.76.42c-.44,0-.84-.06-1.2-.18V3.6c-2.34-.66-4.22-2.54-4.22-4.84H2v15.52a3.3,3.3,0,0,0,1.18,2.58c.6.6,1.36.9,2.28.9,1.9,0,3.44-1.54,3.44-3.44V9.52c1.34.38,2.22,1.34,2.22,2.64,0,1.52-1.24,2.76-2.76,2.76-.4,0-.78-.1-1.1-.26-.24-.12-.46-.28-.64-.48z" transform="translate(-2 -2.1)" style={{filter:'url(#tiktok-shadow)'}}/><path fill="#010101" d="M16.6,5.82s.06-.02.18-.04.4-.04.72-.04c.7,0,1.28.1,1.74.32.48.22.84.56,1.1,1,.24.44.36.96.36,1.56,0,.66-.14,1.24-.42,1.74-.28.5-.68.88-1.2,1.12a2.92,2.92,0,0,1-1.76.42c-.44,0-.84-.06-1.2-.18v5.52a3.3,3.3,0,0,1-1.18,2.58c-.6.6,1.36.9-2.28.9-1.9,0-3.44-1.54-3.44-3.44S9.66,14.9,11.56,14.9c.34,0,.68.04,1.02.14V9.52c-1.34-.38-2.22-1.34-2.22-2.64,0-1.52,1.24-2.76,2.76-2.76.4,0,.78.1,1.1.26.24.12.46.28.64-.48z" transform="translate(-2 -2.1)"/></svg>;


export default function CaseStudyPage() {
  const [hasMounted, setHasMounted] = useState(false);
  const [shuffledOptions, setShuffledOptions] = useState<Option[]>([]);
  const [clickedOptions, setClickedOptions] = useState<Set<string>>(new Set());
  const [selectedOptionId, setSelectedOptionId] = useState<string | null>(null);
  const [quizState, setQuizState] = useState<'home' | 'timeSelection' | 'playing' | 'results'>('home');
  const [timePerQuestion, setTimePerQuestion] = useState(30);
  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);
  const [score, setScore] = useState(0);
  const [questionOrder, setQuestionOrder] = useState<number[]>([]);
  const [shuffledQuizOptions, setShuffledQuizOptions] = useState<string[]>([]);
  const [remainingTime, setRemainingTime] = useState(30);
  const [isAnswered, setIsAnswered] = useState(false);
  const [selectedAnswer, setSelectedAnswer] = useState<string | null>(null);
  const timerRef = useRef<NodeJS.Timeout | null>(null);

  useEffect(() => {
    setHasMounted(true);
  }, []);

  useEffect(() => {
    if (hasMounted) {
      const shuffled = [...caseData.options].sort(() => Math.random() - 0.5);
      setShuffledOptions(shuffled);
    }
  }, [hasMounted]);

  const progressPercentage = Math.round((clickedOptions.size / (shuffledOptions.length || 1)) * 100);
  const areOptionsReviewed = clickedOptions.size === shuffledOptions.length;
  const selectedOption = useMemo(() => {
    return shuffledOptions.find(o => o.id === selectedOptionId) || null;
  }, [selectedOptionId, shuffledOptions]);

  const handleOptionClick = (id: string) => {
    setSelectedOptionId(id);
    setClickedOptions(prev => new Set(prev).add(id));
  };

  const stopTimer = () => {
    if (timerRef.current) clearInterval(timerRef.current);
  };

  const startTimer = (time: number) => {
    stopTimer();
    setRemainingTime(time);
    timerRef.current = setInterval(() => {
      setRemainingTime(prev => {
        if (prev <= 1) {
          stopTimer();
          setIsAnswered(true);
          return 0;
        }
        return prev - 1;
      });
    }, 1000);
  };

  const startQuiz = (time: number) => {
    const qOrder = [...Array(caseData.quiz.length).keys()].sort(() => Math.random() - 0.5);
    setQuestionOrder(qOrder);
    setCurrentQuestionIndex(0);
    setScore(0);
    setTimePerQuestion(time);
    loadQuestion(0, qOrder, time);
    setQuizState('playing');
  };

  const loadQuestion = (index: number, qOrder: number[], time: number) => {
    const questionData = caseData.quiz[qOrder[index]];
    const options = [...questionData.options].sort(() => Math.random() - 0.5);
    setShuffledQuizOptions(options);
    setSelectedAnswer(null);
    setIsAnswered(false);
    startTimer(time);
  };

  const handleAnswer = (option: string) => {
    stopTimer();
    setIsAnswered(true);
    setSelectedAnswer(option);
    if (option === caseData.quiz[questionOrder[currentQuestionIndex]].answer) {
      setScore(prev => prev + 1);
    }
  };

  const handleNextQuestion = () => {
    const nextIndex = currentQuestionIndex + 1;
    if (nextIndex < caseData.quiz.length) {
      setCurrentQuestionIndex(nextIndex);
      loadQuestion(nextIndex, questionOrder, timePerQuestion);
    } else {
      setQuizState('results');
    }
  };

  const resetQuiz = () => {
    setQuizState('home');
    stopTimer();
  }

  const getAppreciationInfo = () => {
    const percentage = (score / caseData.quiz.length) * 100;
    if (percentage >= 95) return { level: "Master! 🏆", description: "Pemahaman Anda sangat mendalam dan komprehensif. Luar biasa!", colorClass: "text-emerald-600" };
    if (percentage >= 80) return { level: "Ahli 🧠", description: "Anda punya pemahaman yang kuat tentang konsep-konsep kunci. Kerja bagus!", colorClass: "text-green-600" };
    if (percentage >= 60) return { level: "Cukup Baik 👍", description: "Dasar-dasarnya sudah Anda kuasai. Teruslah berlatih untuk menjadi lebih ahli.", colorClass: "text-yellow-600" };
    if (percentage >= 40) return { level: "Perlu Peningkatan 📚", description: "Anda di jalur yang benar, namun beberapa konsep penting perlu ditinjau kembali.", colorClass: "text-orange-500" };
    return { level: "Mari Belajar Lagi 💪", description: "Jangan khawatir! Ulas kembali materi kasus untuk memperkuat pemahaman dasar Anda.", colorClass: "text-red-500" };
  };

  const appreciation = getAppreciationInfo();

  useEffect(() => {
    return () => stopTimer();
  }, []);

  if (!hasMounted) {
    return null; // or a loading spinner
  }

  return (
    <main className="container mx-auto p-4 sm:p-6 md:p-8 max-w-5xl">
      <nav className="flex justify-between items-center mb-8">
        <Link href="/respirasi" className="inline-flex items-center text-emerald-700 hover:text-emerald-900 font-semibold transition-colors">
          <BackIcon />
          Kembali ke Daftar Kasus
        </Link>
        <Link href="/" className="inline-flex items-center text-sm text-slate-500 hover:text-emerald-700 font-medium transition-colors">
          <HomeIcon />
          Halaman Utama
        </Link>
      </nav>

      <header className="text-center mb-10">
        <h1 className="text-3xl md:text-4xl font-bold text-emerald-800">Studi Kasus: dr. Rikki Sababalat</h1>
      </header>

      <section id="case-summary" className="mb-12 bg-white p-6 rounded-xl shadow-lg border border-slate-200">
        <h2 className="text-2xl font-semibold text-emerald-700 mb-4">Ringkasan Kasus</h2>
        <div className="grid md:grid-cols-3 gap-6 text-center">
            <div className="bg-emerald-50 p-4 rounded-lg border border-emerald-100">
                <p className="text-sm text-emerald-800 font-medium">Pasien</p>
                <p className="text-xl font-bold text-emerald-900">Laki-laki, 34 Tahun</p>
            </div>
            <div className="bg-emerald-50 p-4 rounded-lg border border-emerald-100">
                <p className="text-sm text-emerald-800 font-medium">Keluhan Utama</p>
                <p className="text-xl font-bold text-emerald-900">Batuk Produktif Kehijauan</p>
            </div>
            <div className="bg-emerald-50 p-4 rounded-lg border border-emerald-100">
                <p className="text-sm text-emerald-800 font-medium">Onset</p>
                <p className="text-xl font-bold text-emerald-900">Sejak 2 Minggu lalu</p>
            </div>
        </div>
        <div className="mt-6 bg-slate-100 p-4 rounded-lg">
            <h3 className="font-semibold text-slate-800">Anamnesis & Temuan Kunci:</h3>
            <ul className="list-disc list-inside text-slate-600 mt-2 space-y-1">
                <li>Dahak kadang-kadang bercampur sedikit darah (hemoptisis).</li>
                <li>Riwayat TB 2 tahun lalu, berobat tuntas 6 bulan dan dinyatakan sembuh.</li>
                <li>Pemeriksaan BTA Sputum: <strong>+/- (Positif 1 / Scanty)</strong>.</li>
                <li>Diagnosis: <strong>TB Paru Kambuh (Relaps)</strong> -&gt; Memerlukan OAT Kategori 2.</li>
            </ul>
        </div>
      </section>

      <section id="differential-diagnosis" className="mb-12">
        <div className="bg-white p-6 md:p-8 rounded-xl shadow-lg border border-slate-200">
          <h2 className="text-2xl font-semibold text-emerald-700 mb-2 text-center">Terapi yang tepat untuk tahap intensif pasien adalah…</h2>
          <p className="text-center text-slate-600 mb-6">Klik setiap opsi untuk melihat analisis dan mengisi baterai progres.</p>
          <nav className="flex flex-wrap justify-center gap-2 mb-8">
            {shuffledOptions.map(o => (
              <button
                key={o.id}
                onClick={() => handleOptionClick(o.id)}
                className={`px-4 py-2 rounded-lg text-sm font-medium transition-colors duration-200 ${selectedOptionId === o.id ? 'nav-button-active' : 'nav-button-inactive'}`}
              >
                {o.name}
              </button>
            ))}
          </nav>
          <div className={`transition-all duration-500 ease-in-out overflow-hidden ${selectedOption ? 'max-h-[500px]' : 'max-h-0'}`}>
            {selectedOption && (
              <div className="bg-white p-6 rounded-xl shadow-inner border border-slate-200">
                <div className="text-center md:text-left">
                  <h3 className="text-2xl font-bold text-emerald-800">{selectedOption.name}</h3>
                  <p className="text-slate-600 mt-1">{selectedOption.description}</p>
                </div>
                <div className="mt-4 pt-4 border-t border-slate-200">
                  <h4 className="font-semibold text-slate-700">Analisis Relevansi dengan Kasus:</h4>
                  <p className="text-slate-600 mt-1 mb-4">{selectedOption.analysis}</p>
                  <div>
                    <h5 className="text-sm font-semibold text-slate-600 mb-1">Skor Kesesuaian: <span className="font-bold text-black">{selectedOption.matchScore} / 10</span></h5>
                    <div className="w-full bg-slate-200 rounded-full h-2.5">
                      <div className="h-2.5 rounded-full" style={{ width: `${selectedOption.matchScore * 10}%`, backgroundColor: selectedOption.matchScore >= 8 ? '#10b981' : selectedOption.matchScore >= 5 ? '#f59e0b' : '#ef4444' }}></div>
                    </div>
                  </div>
                </div>
              </div>
            )}
          </div>
        </div>
      </section>

      {areOptionsReviewed && (
        <section id="conclusion" className="bg-emerald-50 border-2 border-emerald-500 rounded-xl p-6 shadow-lg mt-12 transition-opacity duration-700 ease-in-out">
          <h2 className="text-2xl font-bold text-emerald-800 mb-4 text-center md:text-left">Kesimpulan Terapi</h2>
           <div className="flex flex-col md:flex-row items-center gap-6">
               <div className="viz-icon bg-emerald-200">
                   <div className="w-12 h-12 bg-emerald-400 rounded-full flex items-center justify-center text-3xl">💊</div>
               </div>
               <div className="flex-1">
                   <p className="text-3xl font-bold text-emerald-900">4 Tab 4FDC + Injeksi Streptomisin 1000 mg</p>
                   <p className="mt-2 text-emerald-700">Terapi yang paling tepat adalah OAT Kategori 2. Sesuai pedoman TB nasional, pasien dengan BB 55 kg masuk dalam rentang 55-70 kg, sehingga dosis yang tepat adalah 4 tablet 4FDC/hari dan injeksi Streptomisin 1000 mg/hari selama 56 hari, dilanjutkan 4 tablet 4FDC/hari selama 28 hari.</p>
               </div>
           </div>
           <div className="flex justify-end mt-6">
             <div className="bg-slate-200 text-slate-700 text-xs font-bold px-3 py-1.5 rounded-full flex items-center space-x-2 flex-shrink-0">
               <span>Level Kompetensi SKDI 2024:</span>
               <span className="bg-white text-emerald-800 font-bold px-2 py-0.5 rounded-md">3A</span>
             </div>
           </div>
        </section>
      )}

      <hr className="my-16 border-slate-300" />
      
      <section id="quiz-section" className="flex items-center justify-center">
        <div className="bg-white w-full max-w-3xl rounded-xl shadow-2xl p-6 md:p-8">
            {quizState === 'home' && (
                <div className="text-center">
                    <h1 className="text-2xl md:text-3xl font-bold text-emerald-800">Kuis Kasus TB Kambuh</h1>
                    <p className="text-slate-500 text-center mt-2">Uji pemahaman Anda tentang kasus yang disajikan.</p>
                    <div id="progress-section" className="mt-6 w-full max-w-md mx-auto flex flex-col items-center gap-4">
                        <div className="battery">
                            {Array.from({ length: shuffledOptions.length }).map((_, index) => (
                                <div key={index} className={`battery-segment ${index < clickedOptions.size ? 'filled' : ''}`}></div>
                            ))}
                        </div>
                        <div id="summary-percentage">{progressPercentage}%</div>
                        <ul id="option-checklist">
                            {shuffledOptions.map(o => (
                                <li key={o.id} className={clickedOptions.has(o.id) ? 'completed' : ''}>
                                    {clickedOptions.has(o.id) ? `✅ ${o.name}` : o.name}
                                </li>
                            ))}
                        </ul>
                    </div>
                    <button
                        onClick={() => setQuizState('timeSelection')}
                        disabled={!areOptionsReviewed}
                        className={`mt-8 bg-emerald-600 text-white font-bold py-3 px-8 rounded-lg hover:bg-emerald-700 transition-colors shadow-lg ${areOptionsReviewed ? 'electric-effect' : 'disabled:bg-slate-400 disabled:cursor-not-allowed'}`}
                    >
                        Mulai Kuis
                    </button>
                </div>
            )}
            {quizState === 'timeSelection' && (
              <div className="text-center">
                  <h1 className="text-2xl md:text-3xl font-bold text-emerald-800 mb-6">Pilih Durasi Waktu</h1>
                  <p className="font-semibold mb-4 text-slate-600">Pilih durasi waktu per soal:</p>
                  <div className="flex flex-wrap justify-center gap-3">
                      <button onClick={() => startQuiz(10)} className="bg-amber-500 text-white font-bold py-2 px-6 rounded-lg hover:bg-amber-600 transition-colors">Kilat (10 detik)</button>
                      <button onClick={() => startQuiz(30)} className="bg-emerald-600 text-white font-bold py-2 px-6 rounded-lg hover:bg-emerald-700 transition-colors">Normal (30 detik)</button>
                      <button onClick={() => startQuiz(60)} className="bg-sky-500 text-white font-bold py-2 px-6 rounded-lg hover:bg-sky-600 transition-colors">Santai (60 detik)</button>
                  </div>
              </div>
            )}
            {quizState === 'playing' && questionOrder.length > 0 && (
              <div>
                  <div className="flex justify-between items-center border-b border-slate-200 pb-4 mb-6">
                      <div className="text-sm font-medium text-slate-500">{`Pertanyaan ${currentQuestionIndex + 1} dari ${caseData.quiz.length}`}</div>
                      <div className="flex items-center gap-4">
                          <div className="text-sm font-medium text-slate-600">Skor: <span className="font-bold text-emerald-600">{score}</span></div>
                          <div className="text-sm font-medium text-slate-600">Waktu: <span className={`font-bold w-6 inline-block text-center ${remainingTime < 10 && 'less-time'}`}>{remainingTime}</span>s</div>
                      </div>
                  </div>
                  <h2 className="text-xl font-semibold text-slate-800 mb-6">{caseData.quiz[questionOrder[currentQuestionIndex]].question}</h2>
                  <div className="space-y-4">
                      {shuffledQuizOptions.map(option => {
                          const currentQuestion = caseData.quiz[questionOrder[currentQuestionIndex]];
                          const isCorrect = option === currentQuestion.answer;
                          const isSelected = option === selectedAnswer;
                          const explanationText = currentQuestion.explanations?.[option];
                          let buttonClass = 'option-btn w-full text-left p-4 border-2 border-slate-200 rounded-lg text-slate-700 font-medium transition-all duration-300';
                          if (isAnswered) {
                              if (isCorrect) buttonClass += ' correct';
                              else if (isSelected) buttonClass += ' incorrect';
                              else buttonClass += ' opacity-60';
                          } else {
                              buttonClass += ' hover:bg-slate-100';
                          }
                          return (
                              <div key={option}>
                                  <button onClick={() => handleAnswer(option)} disabled={isAnswered} className={buttonClass}>
                                      {option}
                                  </button>
                                  {isAnswered && explanationText && (isSelected || isCorrect) && (
                                      <div className={`p-3 mt-2 rounded-lg text-sm ${isCorrect ? 'bg-emerald-50 border-l-4 border-emerald-500 text-emerald-800' : 'bg-red-50 border-l-4 border-red-500 text-red-800'}`}>
                                          <span className="font-bold">{isCorrect ? '✅ Tepat! ' : '❌ Kurang Tepat. '}</span>
                                          {explanationText}
                                      </div>
                                  )}
                              </div>
                          );
                      })}
                  </div>
                  {remainingTime === 0 && <p className="text-center font-bold text-red-500 mt-4">Waktu Habis!</p>}
                  {isAnswered && (
                      <div className="text-right mt-8">
                          <button onClick={handleNextQuestion} className="bg-emerald-600 text-white font-bold py-2 px-6 rounded-lg hover:bg-emerald-700 transition-colors">
                              {currentQuestionIndex < caseData.quiz.length - 1 ? 'Selanjutnya' : 'Lihat Hasil'}
                          </button>
                      </div>
                  )}
              </div>
            )}
            {quizState === 'results' && (
              <div className="text-center">
                  <h1 className="text-2xl md:text-3xl font-bold text-emerald-800 mb-6">Hasil Kuis Anda</h1>
                  <div className="bg-slate-50 rounded-lg p-6 grid grid-cols-2 gap-4">
                      <div><p className="text-sm text-slate-500">Total Soal</p><p className="text-2xl font-bold text-slate-800">{caseData.quiz.length}</p></div>
                      <div><p className="text-sm text-slate-500">Benar</p><p className="text-2xl font-bold text-green-600">{score}</p></div>
                      <div><p className="text-sm text-slate-500">Salah</p><p className="text-2xl font-bold text-red-500">{caseData.quiz.length - score}</p></div>
                      <div><p className="text-sm text-slate-500">Persentase</p><p className="text-2xl font-bold text-slate-800">{((score / caseData.quiz.length) * 100).toFixed(0)}%</p></div>
                      <div className="col-span-2 mt-4 p-4 bg-white rounded-lg border border-slate-200">
                          <p id="appreciation-level" className={`text-2xl font-bold text-center ${appreciation.colorClass}`}>{appreciation.level}</p>
                          <p id="appreciation-description" className="text-slate-600 text-center mt-2 text-sm">{appreciation.description}</p>
                      </div>
                  </div>
                  <div className="mt-8 flex justify-center gap-4">
                      <button onClick={resetQuiz} className="bg-emerald-600 text-white font-bold py-2 px-8 rounded-lg hover:bg-emerald-700 transition-colors">Ulangi Kuis</button>
                  </div>
              </div>
            )}
        </div>
      </section>

      <section className="mt-16 text-center">
        <Link href="/respirasi/kasus-selanjutnya" className="inline-flex items-center bg-emerald-600 text-white font-bold py-3 px-8 rounded-lg hover:bg-emerald-700 transition-colors shadow-lg">
          Lanjutkan ke Kasus Berikutnya
          <NextIcon />
        </Link>
      </section>

      <footer className="text-center mt-16 pt-8 border-t border-slate-200">
          <div className="mb-8">
              <p className="font-bold text-red-600">Disclaimer:</p>
              <p className="text-sm text-slate-600 max-w-2xl mx-auto">Aplikasi ini adalah alat bantu belajar dan tidak menggantikan konsultasi medis profesional. Diagnosis dan penanganan harus dilakukan oleh dokter yang berkualifikasi.</p>
          </div>
          <div className="mt-8 pt-8 border-t border-slate-200">
              <div className="flex justify-center items-start space-x-8 mb-4">
                  <a href="https://www.instagram.com/rikki_8523/?utm_source=qr&igsh=MTk3NW55cm12Z3Jybw%3D%3D#" target="_blank" rel="noopener noreferrer" className="flex flex-col items-center text-slate-500 hover:opacity-80 transition-opacity" aria-label="Instagram">
                      <InstagramIcon />
                      <span className="text-xs mt-2 font-medium">Instagram</span>
                  </a>
                  <a href="#" target="_blank" rel="noopener noreferrer" className="flex flex-col items-center text-slate-500 hover:opacity-80 transition-opacity" aria-label="YouTube">
                      <YouTubeIcon />
                      <span className="text-xs mt-1 font-medium">YouTube</span>
                  </a>
                  <a href="#" target="_blank" rel="noopener noreferrer" className="flex flex-col items-center text-slate-500 hover:opacity-80 transition-opacity" aria-label="TikTok">
                      <TikTokIcon />
                      <span className="text-xs mt-2 font-medium">TikTok</span>
                  </a>
              </div>
              <p className="text-base font-semibold text-slate-800">dr. Rikki F. Sababalat</p>
              <p className="text-sm text-slate-500 mt-1">© 2025</p>
          </div>
      </footer>
    </main>
  );
}